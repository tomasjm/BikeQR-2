// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}


model Token {
    id            String    @id @default(cuid())
    token         String    @unique
    storage       Storage?
}

model Storage {
    id            String    @id @default(cuid())
    token         Token     @relation(fields: [tokenId], references: [id])
    tokenId       String    @unique
    user          User      @relation(name: "UserStorage", fields: [userId], references: [id])
    userId        String    
    attendant     User      @relation(name: "AttendantStorage", fields: [attendantId], references: [id])
    attendantId   String 
    bike          Bike      @relation(fields: [bikeId], references: [id])
    bikeId        String 
    status        Status    @default(NOT_STORED)
    createdAt     DateTime  @default(now())
    updatedat     DateTime  @updatedAt
    endedAt       DateTime?
}

model Bike {
    id            String    @id @default(cuid())
    code          String    @unique
    description   String
    user          User      @relation(fields: [userId], references:[id])
    userId        String 
    createdAt     DateTime  @default(now())
    updatedAt     DateTime  @updatedAt
    storage       Storage[]
}

model User {
    id                  String      @id @default(cuid())
    name                String?
    email               String      @unique
    password            String
    role                Role        @default(USER)
    bikes               Bike[]
    createdAt           DateTime    @default(now())
    updatedAt           DateTime    @updatedAt
    storageUser         Storage[]   @relation("UserStorage")
    storageAttendant    Storage[]   @relation("AttendantStorage")
}

enum Role {
    USER
    ATTENDANT
}

enum Status {
    STORED
    NOT_STORED
    CANCELED
}
